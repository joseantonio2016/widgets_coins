public function fetch_reset($config) {
            //add_filter( 'admin_footer_text', function( $ft ) { return '<strong>' . $ft .' fetch reset</strong>'; } );
            $cache = get_transient('tcw-datatime');
           // add_filter( 'admin_footer_text', function( $ft ) { return '<strong>' . $ft .' fetch reset</strong>'; } );
            $api_interval = ($config['api'] == 'coingecko') ? 900 : $config['api_interval'];
            $ccnum_fetch  = $config['ccnum_fetch'];
            //add_filter( 'admin_footer_text', function( $ft ) use ($ccnum_fetch) { return '<strong>' . $ft .' fetch reset'.$ccnum_fetch.'</strong>'; } );
            if ($cache === false || $cache < (time() - $api_interval)) {
                
                switch ($config['api']) {

                    case 'coingecko':
                        
                        $request = wp_remote_get(
                            'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_rank&per_page='
                            .$ccnum_fetch.'&page=1');

                        if (is_wp_error($request) || wp_remote_retrieve_response_code($request) != 200) {
                            /* $this->wpdb->get_results("SELECT `slug` FROM `{$this->tablenam}`");

                            if ($this->wpdb->num_rows > 0) {
                                set_transient('tcw-datatime', time(), 60);
                            } */
                            return false;
                        }

                        $body = wp_remote_retrieve_body($request);
                        $data = json_decode($body);
    
                        if (!empty($data)) {
                                
                
                                foreach ($data as $coin) {
                                    $coin->image = strpos($coin->image, 'coingecko.com') ? strtok($coin->image, '?') : TCW_URL . 'assets/public/img/missing.png';
                                   // $cc_id=$this->criptomoneda_existe($coin->name)
                                    if($cc_id=$this->criptomoneda_existe($coin->id)){
                                        $ccpost = get_post($cc_id);
                                        $postcontent = json_decode($ccpost->post_content, true);

                                        //solo permanece comventa y comcompra
                                        $args = array(
                                            'ID' => $cc_id,
                                            'post_title'    => $coin->name,
                                            'post_content'  => wp_json_encode(array(
                                                'symbol' => strtoupper($coin->symbol),
                                                'logo' => esc_url_raw($coin->image),
                                                'api' => $config['api'],
                                                'comventa'=>$postcontent['comventa'],
                                                'comcompra'=>$postcontent['comcompra']
                                            )),
                                            'post_name'     => $coin->id,
                                            'post_status'   => 'publish',
                                            'post_author'   => 1,
                                            'post_excerpt'  => floatval($coin->current_price),
                                            'post_type' => 'cryptoc',
                                            'post_mime_type' => 'application/json',
                                            'meta_input'   => array(
                                                'ccrank' => intval($coin->market_cap_rank),
                                            ),
                                        );
                                          $post_id = wp_update_post($args,true);
                                          if(is_wp_error($post_id)){
                                            //there was an error in the post insertion, 
                                            wp_die($post_id->get_error_message(),
                                            'Error al actualizar criptomoneda'); 
                                          }

                                    }else{
                                        $args = array(
                                            'post_title'    => $coin->name,
                                            'post_content'  => wp_json_encode(array(
                                                'symbol' => strtoupper($coin->symbol),
                                                'logo' => esc_url_raw($coin->image),
                                                'api' => $config['api'],
                                                'comventa'=>$config['comventa'],
                                                'comcompra'=>$config['comcompra']
                                            )),
                                            'post_name'     => $coin->id,
                                            'post_status'   => 'publish',
                                            'post_author'   => 1,
                                            'post_excerpt'  => floatval($coin->current_price),
                                            'post_type' => 'cryptoc',
                                            'post_mime_type' => 'application/json',
                                            'meta_input'   => array(
                                                'ccrank' => intval($coin->market_cap_rank),
                                            ),
                                        );
                                          $post_id = wp_insert_post($args,true);
                                          if(is_wp_error($post_id)){
                                            //there was an error in the post insertion, 
                                            wp_die($post_id->get_error_message(),
                                            'Error al insertar nueva criptomoneda'); 
                                          }

                                    }
                                      
                                    }
                                 }
                                set_transient('tcw-datatime', time());
                        
    
                        break;
    
                    case 'coinmarketcap':
    
                        /* $request = wp_remote_get('https://pro-api.coinmarketcap.com/v1/cryptocurrency/listings/latest?limit=5000', array('headers' => array('X-CMC_PRO_API_KEY' => $config['api_key'])));

                        if (is_wp_error($request) || wp_remote_retrieve_response_code($request) != 200) {
                            $this->wpdb->get_results("SELECT `slug` FROM `{$this->tablename}`");

                            if ($this->wpdb->num_rows > 0) {
                                set_transient('tcw-datatime', time(), 60);
                            }
                            return false;
                        }

                        $body = wp_remote_retrieve_body($request);
                        $data = json_decode($body);
    
                        if (!empty($data)) {
            
                            if ($data->status->error_code == 0) {
            
                                $this->wpdb->query("TRUNCATE `{$this->tablename}`");
            
                                $btc_price = $data->data[0]->quote->USD->price;
            
                                $values = [];
            
                                foreach($data->data as $coin) {
                                    if ($coin->cmc_rank !== null) {
                                        $coin->price_btc = $coin->quote->USD->price / $btc_price;
                                        $coin->image = 'https://s2.coinmarketcap.com/static/img/coins/64x64/' . $coin->id . '.png';
                                        $values[] = array($coin->name, strtoupper($coin->symbol), $coin->slug, $coin->image, $coin->cmc_rank, floatval($coin->quote->USD->price), floatval($coin->price_btc), floatval($coin->quote->USD->volume_24h), floatval($coin->quote->USD->market_cap), 0.00, 0.00, floatval($coin->circulating_supply), floatval($coin->max_supply), 0.00, strtotime('now'), 0.00, floatval($coin->quote->USD->percent_change_1h), floatval($coin->quote->USD->percent_change_24h), floatval($coin->quote->USD->percent_change_7d), null, gmdate("Y-m-d H:i:s"));
                                    }
                                }
            
                                $values = array_chunk($values, 100, true);
            
                                foreach($values as $chunk) {
                                    $placeholder = "(%s, %s, %s, %s, %d, %f, %f, %f, %f, %f, %f, %f, %f, %f, %d, %f, %f, %f, %f, %f, %s)";
                                    $query = "INSERT IGNORE INTO `{$this->tablenam}` (`name`, `symbol`, `slug`, `img`, `rank`, `price_usd`, `price_btc`, `volume_usd_24h`, `market_cap_usd`, `high_24h`, `low_24h`, `available_supply`, `total_supply`, `ath`, `ath_date`, `price_change_24h`, `percent_change_1h`, `percent_change_24h`, `percent_change_7d`, `percent_change_30d`, `weekly_expire`) VALUES ";
                                    $query .= implode(", ", array_fill(0, count($chunk), $placeholder));
                                    $this->wpdb->query($this->wpdb->prepare($query, call_user_func_array('array_merge', $chunk)));
                                }
                                set_transient('tcw-datatime', time());
                            }
        
                        }
                    */
                        break; 
                }

            }

        }
